AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Computing Resource (Single EC2 Resource) for Gen-AI Lab Environments.
Parameters:
#   KeyName:
#     Description: Name of KeyPair
#     Type: AWS::EC2::KeyPair::KeyName
  AMI:
    Description: AMI of EC2
    Type: AWS::EC2::Image::Id
    #Python3.10 StreamServer AMI (Chatbot Web UI Server)
    Default: ami-048579c2bdddfaf43
  EC2InstanceName:
    Description: EC2 Server Name Tag
    Type : String
    Default: poc-genai-ec2-web-python310
  EC2InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
  EC2InstanceRoleName:
    Description: EC2 Instance Role Name
    Type: String
    Default: poc-genai-role-ec2
  BedrockPolicyName:
    Description: Bedrock Policy Name for EC2 Role 
    Type: String
    Default: poc-genai-policy-bedrock
  SecurityGroupForWebName:
    Description: Security Group for Web EC2 Instance 
    Type: String
    Default: poc-genai-sg-web
  NetworkStackName:
    Description: Network Baseline VPCName
    Type: String
    Default: Network-Baseline-for-GenAI

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Computing Resources"
        Parameters: 
          - NetworkStackName
          - AMI
          - EC2InstanceName
          - EC2InstanceType
          - EC2InstanceRoleName
          - SecurityGroupForWebName
          - BedrockPolicyName

Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
#     KeyName: !Ref KeyName
      ImageId: !Ref AMI
      InstanceType: !Ref EC2InstanceType
      SubnetId: 
        Fn::ImportValue:
          !Sub "${NetworkStackName}-PublicSubnet01"
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroupIds:
        - !Ref SecurityGgroupForWeb
      Tags:
        - Key: Name
          Value: !Ref EC2InstanceName
          
  SecurityGgroupForWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow 22, 80
      GroupName: !Ref SecurityGroupForWebName
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 
            Fn::ImportValue:
              !Sub "${NetworkStackName}-VPCCIDR"
      VpcId: 
        Fn::ImportValue:
          !Sub "${NetworkStackName}-VPC"
  
  EC2InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref EC2InstanceRole
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
      RoleName: !Ref EC2InstanceRoleName
      Policies:
        -
          PolicyName: !Ref BedrockPolicyName
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: "bedrock:*"
                #   - bedrock:ListAgentActionGroups
                #   - bedrock:ListAgentAliases
                #   - bedrock:ListAgents
                #   - bedrock:ListAgentVersions
                #   - bedrock:ListCustomModels
                #   - bedrock:ListFoundationModels
                #   - bedrock:ListModelCustomizationJobs
                #   - bedrock:ListPrompts
                #   - bedrock:ListTagsForResource
                #   - bedrock:GetAgent
                #   - bedrock:GetAgent
                #   - bedrock:GetAgentActionGroup
                #   - bedrock:GetAgentAlias
                #   - bedrock:GetAgentVersion
                #   - bedrock:GetCustomModel
                #   - bedrock:GetModelCustomizationJob
                #   - bedrock:GetPrompt
                #   - bedrock:CreateAgent
                #   - bedrock:CreateAgentActionGroup
                #   - bedrock:CreateAgentAlias
                #   - bedrock:CreateAgentDraftSnapshot
                #   - bedrock:CreateModelCustomizationJob
                #   - bedrock:DeleteCustomModel
                #   - bedrock:DeletePrompt
                #   - bedrock:InvokeAgent
                #   - bedrock:InvokeModel
                #   - bedrock:InvokeModelWithResponseStream
                #   - bedrock:StopModelCustomizationJob
                #   - bedrock:UpdateAgent
                #   - bedrock:UpdateAgentActionGroup
                #   - bedrock:UpdateAgentAlias
                #   - bedrock:UpdatePrompt
                #   - bedrock:TagResource
                #   - bedrock:UntagResource
                Resource: "*"
                #   - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}::foundation-model/*"
                #   - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:custom-model/*"
                #   - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:model-customization-job/*"
#                  - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:agent/${AgentId}"
#                  - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/${AgentId}/${AgentAliasId}"

Outputs:
  EC2Instance:
    Value: !Ref EC2Instance
    Description: EC2 Instance for Gen AI Web UI 
    Export:
      Name: !Sub "${AWS::StackName}-EC2Instance"